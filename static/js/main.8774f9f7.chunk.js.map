{"version":3,"sources":["components/SbComponentDocumentation/DocumentationIcon.js","components/SbComponentDocumentation/SectionOption.js","components/SbComponentDocumentation/Section.js","components/SbComponentDocumentation/Configuration.js","components/SbComponentDocumentation/SbComponentDocumentation.js","components/ComponentList/ComponentList.js","components/Search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","margin","DocumentationIcon","icon","classes","className","SectionOption","options","map","option","ListItem","alignItems","type","ListItemText","primary","name","secondary","description","sectionDetails","Required","summary","expandOnLoad","Optional","Advanced","boxShadow","Section","section","useState","expanded","state","setState","Accordion","onClick","AccordionSummary","expandIcon","aria-controls","Typography","variant","align","AccordionDetails","List","Configuration","config","console","log","Grid","direction","baseConfig","sections","Object","keys","forEach","key","includes","display_name","k","push","requiredSection","obj","formatConfigSections","componentData","JSON","parse","window","localStorage","getItem","divider","grid","SbComponentDocumentation","container","component_group_name","Divider","schema","ComponentList","searchResults","history","useHistory","aria-label","component","button","setItem","stringify","go","toLowerCase","handleClick","id","Search","components","filter","test","setSearchResults","useEffect","search","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","fuse","Fuse","item","FormControl","fullWidth","TextField","onChange","e","target","value","label","InputProps","startAdornment","InputAdornment","position","compSideNav","overflow","height","compSideNavContent","App","justify","xs","theme","accessToken","version","dynamicSlug","customComponents","componentName","Component","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.8774f9f7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport DynamicFeedIcon from '@material-ui/icons/DynamicFeed';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ImageIcon from '@material-ui/icons/Image';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: '10px'\n  },\n}));\n\nfunction DocumentationIcon({ icon }) {\n  const classes = useStyles();\n  const getIcon = () => {\n    if (icon === 'boolean') return <CheckBoxIcon className={classes.root}/>\n    if (icon === 'bloks') return <CategoryIcon className={classes.root}/>\n    if (icon === 'text') return <TextFormatIcon className={classes.root}/>\n    if (icon === 'options') return <DynamicFeedIcon className={classes.root}/>\n    if (icon === 'link') return <LinkIcon className={classes.root}/>\n    return <ImageIcon className={classes.root}/>\n  }\n\n  return getIcon()\n}\n\nexport default DocumentationIcon","import ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DocumentationIcon from './DocumentationIcon'\n\nfunction SectionOption({ options }) {\n\n  return options.map(option => {\n    return (\n      <ListItem key={option.name} alignItems=\"flex-start\" >\n        <DocumentationIcon icon={option.type}/>\n        <ListItemText primary={option.name} secondary={option.description} />\n      </ListItem>\n    )\n  })\n}\n\nexport default SectionOption;","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport SectionOption from './SectionOption';\n\nconst sectionDetails = {\n  Required: {\n    summary: 'properties and bloks needed to use this blok',\n    expandOnLoad: true\n  },\n  Optional: {\n    summary: 'properties you can add to customize the bloks apperance',\n    expandOnLoad: true\n  },\n  Advanced: {\n    summary: 'properties that provide advanced style overides',\n    expandOnLoad: false  \n  }\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    boxShadow: 'none'\n  }\n}));\n\nfunction Section({ section }) {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    expanded: sectionDetails[section.name].expandOnLoad\n  });\n\n  const toggleAccordion = () => {\n    setState({\n      expanded: !state.expanded\n    });\n  };\n\n  return (\n    <Accordion className={classes.root} expanded={state.expanded} onClick={toggleAccordion}>\n      <AccordionSummary\n        expandIcon={state.expanded ? <RemoveIcon /> : <AddIcon />}\n        aria-controls=\"sectoion-header\">\n        <Typography variant=\"body1\" align=\"left\">\n          {section.name}\n          <Typography variant=\"body2\">{sectionDetails[section.name].summary}</Typography>\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <List>\n          <SectionOption options={section.options}/>\n        </List>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nexport default Section;\n","import Section from './Section';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nfunction Configuration({ config }) {\n  console.log(config)\n  const formatConfigSections = (baseConfig) => {\n    let sections = []\n\n    Object.keys(config).forEach(key => {\n      if (key.includes('tab')) {\n        const section = {\n          name: config[key].display_name,\n          options: config[key].keys.map(k => {\n            delete baseConfig[k]\n            return {\n              name: k,\n              ...config[k]\n            }\n          })\n        }\n\n        delete baseConfig[key]\n        sections.push(section)\n      }\n    })\n\n    const requiredSection = {\n      name: 'Required',\n      options: []\n    }\n    Object.keys(baseConfig).forEach(key => {\n      const obj = {\n        name: key,\n        ...config[key]\n      }\n      requiredSection.options.push(obj)\n    })\n    sections = [requiredSection, ...sections]\n    return sections\n  }\n\n  return (  \n    <Grid direction=\"column\">\n      <Typography variant=\"h6\" align=\"left\">\n        Configuration\n      </Typography>\n\n      { formatConfigSections({...config}).map(section =>  <Section key={section.name} section={section}/>) }\n    </Grid>\n  );\n}\n\nexport default Configuration;","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Configuration from './Configuration';\n\nconst componentData = JSON.parse(window.localStorage.getItem('componentData'))\nconst useStyles = makeStyles(() => ({\n  divider: {\n    margin: '16px 0'\n  },\n  grid: {\n    margin: '16px 0'\n  }\n}));\n\nfunction SbComponentDocumentation() {\n  const classes = useStyles();\n\n  return (  \n    <Grid container direction=\"column\" className={classes.grid}>\n      <Typography \n        variant=\"h4\" \n        align=\"left\">\n          { componentData.component_group_name } / { componentData.name }\n      </Typography>\n      \n      <Divider className={classes.divider}/>\n\n      <Configuration config={componentData.schema} />\n    </Grid>\n  );\n}\n\nexport default SbComponentDocumentation;","import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useHistory } from \"react-router-dom\";\n\nfunction ComponentList({ searchResults }) {\n  let history = useHistory()\n\n  const handleClick = component => {\n    window.localStorage.setItem('componentData', JSON.stringify(component))\n    history.go(`/component-docs/page-${component.name.toLowerCase()}`)\n  }\n\n  return (\n    <List aria-label=\"component search list\">\n        {searchResults.map(component => {\n          return (\n            <ListItem key={component.id} button onClick={() => handleClick(component)}>\n              <ListItemText primary={component.name} secondary={component.component_group_name} />\n            </ListItem>\n          )\n        })}\n    </List>\n  );\n};\n\nexport default ComponentList;\n","import React, { useEffect, useState } from 'react'\nimport Fuse from 'fuse.js'\nimport { TextField, FormControl, InputAdornment } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nimport ComponentList from '../ComponentList/ComponentList';\nimport { components } from '../../components.json'\n\nconst filterOutUnwantedComponents = (components) => {\n  // TODO - we can remove Mui once we clean up and remove the legacy components from SB\n  // also check out these and clean up if we can\n  return components.filter(component => !/Mui|Blok|teaser|Page|page|grid|feature/.test(component.name));\n}\n\nfunction Search() {\n  const [state, setState] = useState({ components: filterOutUnwantedComponents(components) })\n  const [searchResults, setSearchResults] = useState([])\n\n  useEffect(() => {\n    search()\n  }, []);\n\n  const search = (search = '') => {\n    const options = {\n      shouldSort: true,\n      threshold: 0.6,\n      location: 0,\n      distance: 100,\n      maxPatternLength: 32,\n      minMatchCharLength: 1,\n      keys: ['name']\n    }\n\n    const fuse = new Fuse(state.components, options)\n    const components = search \n      ? fuse.search(search).map(item => item.item) \n      : state.components;\n\n    setSearchResults(components)\n  }\n\n  return (\n      <FormControl fullWidth>\n        <TextField\n        onChange={e => search(e.target.value)}\n        label=\"Search components by name\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <ComponentList searchResults={searchResults}/>\n    </FormControl>\n  );\n};\n\nexport default Search;\n","import './App.css';\nimport MuiStoryblok from 'mui-storyblok'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SbComponentDocumentation from './components/SbComponentDocumentation/SbComponentDocumentation';\nimport Search from './components/Search/Search';\n\nconst useStyles = makeStyles(() => ({\n  compSideNav: {\n    'background-color': 'white',\n    overflow: 'scroll', \n    height: '100vh', \n    boxShadow: '1px 1px 4px -1px grey'\n  },\n  compSideNavContent: {\n    'background-color': '#f1f1f1',\n    overflow: 'scroll', \n    height: '100vh'\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={classes.root}\n      container\n      direction=\"row\"\n      justify=\"flex-start\"\n      alignItems=\"flex-start\">\n\n      <Grid\n        className={classes.compSideNav}\n        container\n        item\n        xs={2}\n        direction=\"row\">\n          <Search />\n      </Grid>\n\n      <Grid \n        className={classes.compSideNavContent} \n        item \n        xs={10}\n        >\n        <MuiStoryblok\n            theme={{}} \n            accessToken=\"fa2Qt4skFijvgTqoT2xYrAtt\"\n            version=\"draft\"\n            dynamicSlug=\"component-docs/getting-started\"\n            customComponents={[{\n              componentName: 'SbComponentDocumentation',\n              Component: SbComponentDocumentation,\n              props: {},\n            }]}\n          />\n      </Grid>\n\n    </Grid>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" exact>\n        <App />\n      </Route>\n      <Route path=\"/**\" exact>\n        <App />\n      </Route>\n      <Route path=\"/component-docs/**\" exact>\n        <App />\n      </Route>\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}